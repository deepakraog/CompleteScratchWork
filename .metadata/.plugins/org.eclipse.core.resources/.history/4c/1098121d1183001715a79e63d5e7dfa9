package com.drg.MonthlyReport.airtel;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.util.LinkedHashMap;
import java.util.Map.Entry;
import java.util.Properties;

public class staticCol
{
  public static void initializeStaticVaraibles()
  {
    LinkedHashMap prodKey = new LinkedHashMap();
    LinkedHashMap prodPP = new LinkedHashMap();

    System.out.println("Static block");

    BufferedReader brKeyword = null;
    BufferedReader brPP = null;
    FileWriter out = null;
    BufferedWriter bw = null;

    Properties prop = new Properties();
    try
    {
      InputStream input = new FileInputStream("config.properties");
      prop.load(input);
      String OFFLINE_KEYWORD_DETAILS = prop.getProperty("OFFLINE_KEYWORD_DETAILS");
      String OFFLINE_PRODUCTID_DETAILS = prop.getProperty("OFFLINE_PRODUCTID_DETAILS");
      String PRODUCT = prop.getProperty("PRODUCT");
      String ALLVALUE = prop.getProperty("ALLVALUE");
      out = new FileWriter(ALLVALUE);
      bw = new BufferedWriter(out);
      brKeyword = new BufferedReader(new FileReader(OFFLINE_KEYWORD_DETAILS));
      brPP = new BufferedReader(new FileReader(OFFLINE_PRODUCTID_DETAILS));
      String[] str;
      int i;
      String line;
      for (; (line = brKeyword.readLine()) != null; 
        i < str.length - 1)
      {
        String line;
        str = line.split(",");
        i = 0; continue;
        prodKey.put(str[i], str[(i + 1)]);

        i++;
      }
      String[] str;
      int i;
      for (; (line = brPP.readLine()) != null; 
        i < str.length - 1)
      {
        str = line.split(",");
        i = 0; continue;
        prodPP.put(str[i], str[(i + 1)]);

        i++;
      }

      for (Map.Entry entry : prodKey.entrySet()) {
        line = prodPP.containsKey(entry.getKey()) ? 
          (String)entry.getValue() + "," + (String)entry.getKey() + "," + (String)prodPP.get(entry.getKey()) + ",0.0,0.0" : 
          "N/A";
        bw.write(line + "\n");
      }
    }
    catch (IOException e) {
      e.printStackTrace();

      if (bw != null)
        try {
          bw.close();
        } catch (IOException e) {
          e.printStackTrace();
        }
    }
    finally
    {
      if (bw != null)
        try {
          bw.close();
        } catch (IOException e) {
          e.printStackTrace();
        }
    }
  }
}